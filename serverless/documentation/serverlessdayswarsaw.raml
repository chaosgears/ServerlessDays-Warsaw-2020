#%RAML 1.0
title: Serverless Days 2020
version: v1
baseUri: https://1gxq5w09z7.execute-api.eu-central-1.amazonaws.com/dev/

/registration:
    description: |
        A collection of guest registration
    post:
        description: |
            Add a new guest registration and send him a confirmation email   
            with a link through which the registration will be deleted.
        body:
            application/json:
                properties:
                    firstName:
                        description: First name
                        type: string
                        example: "Jan"
                    lastName:
                        description: Last name
                        type: string
                        example: "Kowalski"
                    email:
                        description: Email
                        type: string
                        example: "jan.kowalski@softgame.com"
                    position:
                        description: Position in the organization
                        type: string
                        example: "Junior Software Developer"
                    organizationName:
                        description: Name of the organization
                        type: string
                        example: "SoftGame"
                    businessInterests:
                        description: 
                        type: list
                        example: ["Test"]
                    technicalInterests:
                        description: 
                        type: list
                        example: ["Test"]
                    isCanceled:
                        description: Property is set to true if the guest cancels registration, otherwise the flag is false 
                        type: boolean
                        example: True
                example: |
                    {
                        "firstName": "Jan",
                        "lastName": "Kowalski",
                        "email": "jan.kowalski@company.com",
                        "position": "Junior Software Developer",
                        "organizationName": "SoftGame",
                        "businessInterests": ["Test"],
                        "technicalInterests": ["Test"]
                    }
        responses:
            200:
                description: |
                    The output contains the unique identifier of the newly created registration.
                body:
                    application/json:
                        example: |
                            {                    
                                "statusCode": 200,
                                "message": "Success",
                                "output": "520d6254-72b2-48c3-a2f2-44bd1e7d3be3"
                            }
            400:
                body:
                    application/json:
                        example: |
                            { 
                                "statusCode": 400,
                                "message" : "Client error",
                                "output" : null 
                            }
            409:
                body:
                    application/json:
                        example: |
                            { 
                                "statusCode": 409,
                                "message" : "Already exists",
                                "output" : "520d6254-72b2-48c3-a2f2-44bd1e7d3be3"
                            }
    /{id}:
        delete:
            description: |
                Delete guest registration with the specified {id}.
            responses:
                200:
                    body:
                        application/json:
                            example: |
                                {
                                    "statusCode": 200,
                                    "message": "Registration {id} has been successfully canceled."
                                }
                400:
                    body:
                        application/json:
                            example: |
                                { 
                                    "statusCode": 400,
                                    "message" : "Client error"
                                }
/presentation:
    description: |
        A collection of presentations
    post:
        description: | 
            Add a new presentation request and send a thank you email to the author.
            Author must be registered as an event guest.
        body:
            application/json:
                properties:
                    email:
                        description: Email of the author
                        type: string
                        example: "jankowalski@softgame.pl"
                    presentationTitle:
                        description: Title of presentation
                        type: string
                        example: "AWSome techniques to build your app!"
                    presentationDescription:
                        description: Description of presentation, maximum length is 400 characters.
                        type: string
                        example: "In my presentation I want to show some great tricks to youngsters 
                            how to efficiently build their first application."
                example: |
                    {
                        "email": "jan.kowalski@softgame.pl",
                        "presentationTitle": "AWSome techniques to build your app!",
                        "presentationDescription": "In my presentation I want to show some great tricks to youngsters 
                            how to efficiently build their first application."
                    }
        responses:
            200:
                description: |
                    The output contains the unique identifier of the message.
                body:
                    application/json:
                        example: |
                            {                    
                                "statusCode": 200,
                                "message": "Email sent! Message ID: 12345",
                                "output": "12345"
                            }
            400:
                body:
                    application/json:
                        example: |
                            { 
                                "statusCode": 400,
                                "message" : "Client error or Param error",
                                "output" : null 
                            }
            401:
                body:
                    application/json:
                        example: |
                            { 
                                "statusCode": 401,
                                "message" : "User has not registered for the event",
                                "output" : null
                            }
            409:
                body:
                    application/json:
                        example: |
                            { 
                                "statusCode": 409,
                                "message" : "Guest canceled the registration",
                                "output" : null
                            }